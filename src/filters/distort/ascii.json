{
  "id": "ascii",
  "name": "ASCII",
  "settings": [
    {
      "id": "zoom",
      "defaultValue": 1,
      "key": "iZoom",
      "name": "Zoom",
      "type": "float",
      "step": 0.01,
      "minValue": 0,
      "maxValue": 5
    }
  ],
  "fragmentShader": "#define P(id,a,b,c,d,e,f,g,h) if( id == int(pos.y) ){ int pa = a+2*(b+2*(c+2*(d+2*(e+2*(f+2*(g+2*(h))))))); cha = floor(mod(float(pa)/pow(2.,float(pos.x)-1.),2.)); }\n\nfloat gray(vec3 _i)\n{\n    return _i.x*0.299+_i.y*0.587+_i.z*0.114;\n}\n\nvoid main()\n{\n    vec2 uv = vec2(floor(gl_FragCoord.x/8./iZoom)*8.*iZoom,floor(gl_FragCoord.y/12./iZoom)*12.*iZoom)/iResolution.xy;\n    ivec2 pos = ivec2(mod(gl_FragCoord.x/iZoom,8.),mod(gl_FragCoord.y/iZoom,12.));\n    vec4 tex = texture2D(iTexture, uv);\n    float cha = 0.;\n    \n    float g = gray(tex.xyz);\n    if (g < .125)\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,0,0,0,0,0);\n        P(9,0,0,0,0,0,0,0,0);\n        P(8,0,0,0,0,0,0,0,0);\n        P(7,0,0,0,0,0,0,0,0);\n        P(6,0,0,0,0,0,0,0,0);\n        P(5,0,0,0,0,0,0,0,0);\n        P(4,0,0,0,0,0,0,0,0);\n        P(3,0,0,0,0,0,0,0,0);\n        P(2,0,0,0,0,0,0,0,0);\n        P(1,0,0,0,0,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if( g < .25 ) // .\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,0,0,0,0,0);\n        P(9,0,0,0,0,0,0,0,0);\n        P(8,0,0,0,0,0,0,0,0);\n        P(7,0,0,0,0,0,0,0,0);\n        P(6,0,0,0,0,0,0,0,0);\n        P(5,0,0,0,0,0,0,0,0);\n        P(4,0,0,0,1,1,0,0,0);\n        P(3,0,0,0,1,1,0,0,0);\n        P(2,0,0,0,0,0,0,0,0);\n        P(1,0,0,0,0,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if( g < .375 ) // ,\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,0,0,0,0,0);\n        P(9,0,0,0,0,0,0,0,0);\n        P(8,0,0,0,0,0,0,0,0);\n        P(7,0,0,0,0,0,0,0,0);\n        P(6,0,0,0,0,0,0,0,0);\n        P(5,0,0,0,0,0,0,0,0);\n        P(4,0,0,0,1,1,0,0,0);\n        P(3,0,0,0,1,1,0,0,0);\n        P(2,0,0,0,0,1,0,0,0);\n        P(1,0,0,0,1,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if( g < .5 ) // -\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,0,0,0,0,0);\n        P(9,0,0,0,0,0,0,0,0);\n        P(8,0,0,0,0,0,0,0,0);\n        P(7,0,0,0,0,0,0,0,0);\n        P(6,1,1,1,1,1,1,1,0);\n        P(5,0,0,0,0,0,0,0,0);\n        P(4,0,0,0,0,0,0,0,0);\n        P(3,0,0,0,0,0,0,0,0);\n        P(2,0,0,0,0,0,0,0,0);\n        P(1,0,0,0,0,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if(g < .625 ) // +\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,0,0,0,0,0);\n        P(9,0,0,0,1,0,0,0,0);\n        P(8,0,0,0,1,0,0,0,0);\n        P(7,0,0,0,1,0,0,0,0);\n        P(6,1,1,1,1,1,1,1,0);\n        P(5,0,0,0,1,0,0,0,0);\n        P(4,0,0,0,1,0,0,0,0);\n        P(3,0,0,0,1,0,0,0,0);\n        P(2,0,0,0,0,0,0,0,0);\n        P(1,0,0,0,0,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if(g < .75 ) // *\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,0,1,0,0,0,0);\n        P(9,1,0,0,1,0,0,1,0);\n        P(8,0,1,0,1,0,1,0,0);\n        P(7,0,0,1,1,1,0,0,0);\n        P(6,0,0,0,1,0,0,0,0);\n        P(5,0,0,1,1,1,0,0,0);\n        P(4,0,1,0,1,0,1,0,0);\n        P(3,1,0,0,1,0,0,1,0);\n        P(2,0,0,0,1,0,0,0,0);\n        P(1,0,0,0,0,0,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else if(g < .875 ) // #\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,1,0,0,1,0,0);\n        P(9,0,0,1,0,0,1,0,0);\n        P(8,1,1,1,1,1,1,1,0);\n        P(7,0,0,1,0,0,1,0,0);\n        P(6,0,0,1,0,0,1,0,0);\n        P(5,0,1,0,0,1,0,0,0);\n        P(4,0,1,0,0,1,0,0,0);\n        P(3,1,1,1,1,1,1,1,0);\n        P(2,0,1,0,0,1,0,0,0);\n        P(1,0,1,0,0,1,0,0,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    else // @\n    {\n        P(11,0,0,0,0,0,0,0,0);\n        P(10,0,0,1,1,1,1,0,0);\n        P(9,0,1,0,0,0,0,1,0);\n        P(8,1,0,0,0,1,1,1,0);\n        P(7,1,0,0,1,0,0,1,0);\n        P(6,1,0,0,1,0,0,1,0);\n        P(5,1,0,0,1,0,0,1,0);\n        P(4,1,0,0,1,0,0,1,0);\n        P(3,1,0,0,1,1,1,1,0);\n        P(2,0,1,0,0,0,0,0,0);\n        P(1,0,0,1,1,1,1,1,0);\n        P(0,0,0,0,0,0,0,0,0);\n    }\n    \n    vec3 col = tex.xyz/max(tex.x,max(tex.y,tex.z));\n    gl_FragColor = vec4(cha*col,1.);\n}"
}
